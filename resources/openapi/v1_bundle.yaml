openapi: 3.0.1
info:
  title: DS
  description: DS api
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8000/api
    description: Local API server
tags:
  - name: Authenticate
  - name: Collectors
paths:
  /authenticate:
    post:
      tags:
        - Authenticate
      operationId: authenticate
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: info@test.com
                password:
                  type: string
                  example: '***'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: sdfJsdfmUJKLsdfx...
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationException'
    delete:
      tags:
        - Authenticate
      operationId: logout
      security:
        - jwt: []
      summary: Logout user
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
  /register:
    post:
      tags:
        - Authenticate
      summary: Register user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: user.name
                email:
                  type: string
                  example: info@user.mail
                password:
                  type: string
                  format: password
                  example: '***'
                password_confirmation:
                  type: string
                  format: password
                  example: '***'
              required:
                - name
                - email
                - password
                - password_confirmation
      responses:
        '201':
          $ref: '#/components/responses/Success'
        '422':
          $ref: '#/components/responses/ValidationException'
  /collectors:
    get:
      tags:
        - Collectors
      operationId: CollectorsIndex
      summary: Collectors listing
      parameters:
        - name: filters[search]
          in: query
          required: false
          schema:
            type: string
            example: search query
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectorsCollection'
  /collector/{slug}:
    get:
      tags:
        - Collectors
      operationId: CollectorsShow
      summary: Show Collector profile
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            oneOf:
              - type: integer
              - type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collector'
components:
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    ValidationException:
      description: Validation errors
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              errors:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
    Success:
      description: Successful
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
  schemas:
    Collector:
      type: object
      properties:
        id:
          type: integer
        nameg:
          type: string
        slug:
          type: string
        first_name:
          type: string
        collection:
          type: integer
        auction:
          type: integer
        sale:
          type: integer
        exchange:
          type: integer
    CollectorsCollection:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Collector'
        current_page:
          type: string
          default: 1
        first_page_url:
          type: string
        from:
          type: integer
          default: 1
        next_page_url:
          type: string
          nullable: true
        prev_page_url:
          type: string
          nullable: true
        to:
          type: integer
        path:
          type: string
        per_page:
          type: integer
