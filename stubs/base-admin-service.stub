<?php

namespace {{ namespace }};

use Domain\{{ domain }}\DTOs\Fill{{ model }}DTO;
use Illuminate\Support\HigherOrderTapProxy;
use Domain\{{ domain }}\Models\{{ model }};
use Support\Exceptions\CrudException;
use Support\Transaction;
use Throwable;

class {{ model }}Service
{
    public function create(Fill{{ model }}DTO $data): HigherOrderTapProxy|{{ model }}
    {
        return Transaction::run(
            function () use ($data) {
                ${{ camelModel }} = {{ model }}::create([
                    {{ fields }}
                ]);

                {{ addFeaturedImage }}

                {{ addImages }}

                return ${{ camelModel }};
            },
            function (Throwable $e) {
                throw new CrudException($e->getMessage());
            }
        );
    }

    public function update({{ model }} ${{ camelModel }}, Fill{{ model }}DTO $data): HigherOrderTapProxy|{{ model }}
    {
        return Transaction::run(
            function () use ($data, ${{ camelModel }}) {
                {{ updateFeaturedImage }}

                {{ updateImages }}

                ${{ camelModel }}->fill([
                    {{ updateFields }}
                ])
                ->save();

                return ${{ camelModel }};
            },
            function (Throwable $e) {
                throw new CrudException($e->getMessage());
            }
        );
    }
}
